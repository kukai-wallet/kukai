@use "../../../../../../abstracts/variables" as v;
@use "../../../../../../abstracts/mixins" as m;
@import "../mixins";

$base-font-color: v.$base-font-color;
$base-end-color: v.$base-end-color;
$base-blue-color-lightened: v.$base-blue-color-lightened;
$base-color-lightened-1: v.$base-color-lightened-1;
$base-color-lightened-2: v.$base-color-lightened-2;
$base-color-lightened-5: v.$base-color-lightened-5;
$base-color-lightened-6: v.$base-color-lightened-6;
$base-color-lightened-65: v.$base-color-lightened-65;
$base-color-lightened-7: v.$base-color-lightened-7;
$border-color-dark-only: v.$border-color-dark-only;
$border-width-dark-only: v.$border-width-dark-only;
$border-width: v.$border-width;
$border-color: v.$border-color;
$border-radius: v.$border-radius;
$border-radius-tab: 2rem;
$border-radius-hard: v.$border-radius-hard;
$box-shadow: 0px 4px 6px #3332;
$base-filter-brightness-5: v.$base-filter-brightness-5;
$compactness: v.$compactness;

@include base;

.top-container {
  @include top-container;

  &-nfts {
    @include top-container;
    margin-bottom: 0;
    background-color: var(--base-background-color);
    & .toggle {
      width: 50rem;
      max-width: 64%;
      height: 100%;
      background: linear-gradient(
        180deg,
        transparent 0% 50%,
        $base-color-lightened-6 50% 100%
      );

      & h1 {
        width: 100%;
        text-align: center;
        height: 100%;
        justify-content: center;
        align-items: center;
        font-size: 1.875rem;
        cursor: pointer;

        &:first-of-type {
          border-top-left-radius: $border-radius-tab;
          border-top-right-radius: $border-radius-tab;
          border-bottom-right-radius: $border-radius-tab;
          background-color: var(--base-background-color);
        }
        &.selected:first-of-type {
          border-top-left-radius: $border-radius-tab;
          border-top-right-radius: $border-radius-tab;
          border-bottom-right-radius: 0;
          background-color: $base-color-lightened-6;
        }
        &:last-of-type {
          border-top-left-radius: $border-radius-tab;
          border-top-right-radius: $border-radius-tab;
          border-bottom-left-radius: $border-radius-tab;
          background-color: var(--base-background-color);
        }
        &.selected:last-of-type {
          border-top-left-radius: $border-radius-tab;
          border-top-right-radius: $border-radius-tab;
          border-bottom-left-radius: 0;
          background-color: $base-color-lightened-6;
        }
      }
    }

    & .icon {
      margin-left: 1.5rem;
      width: 2.15rem;
      height: 1.15rem;
      padding: calc(0.5rem * #{$compactness}) 0rem;
      border-radius: $border-radius-hard;
      border: $border-width solid $base-color-lightened-5;
    }

    & .icon-grey {
      @include m.multiply("font-size", 1.15);
      margin-left: 1.5rem;
      width: auto;
      padding: calc(0.5rem * #{$compactness}) 1.5rem;
      background-color: $base-color-lightened-7;
      border-radius: $border-radius-hard;
      border: $border-width solid $base-color-lightened-5;
      justify-content: center;
    }

    & span.discover {
      @include m.multiply("font-size", 1);
      box-shadow: $box-shadow;
      color: $base-blue-color-lightened;
      background-color: $base-end-color;
      border: none;
      padding: calc(0.5rem * #{$compactness}) 1.25rem;
      letter-spacing: 0.02em;
      font-weight: 500;
    }

    & .right {
      @include top-container-right;
    }
  }
}

:host {
  grid-area: nft;
  grid-row: 1 / 10;

  & .main-container {
    height: auto;
  }
}

.pending,
.nfts {
  & .head {
    padding: calc(1.5rem * #{$compactness}) 2.5rem calc(1.5rem * #{$compactness}) 1.875rem;
    border-radius: v.$border-radius;
    background-color: $base-end-color;

    & .left {
      justify-content: flex-start;

      & .title {
        @include m.multiply("font-size", 1.75);
        margin-right: 1rem;

        & a {
          color: black;
        }

        & a:hover {
          text-decoration: underline;
        }
      }
    }
  }
}

.nfts {
  width: calc(100% - 3rem);
  padding: 1.5rem 1.5rem 0 1.5rem;
  background-color: $base-color-lightened-6;
  border-radius: 2rem;
  border-radius: $border-radius;
  border-top-left-radius: 0;
  & > span {
    margin-bottom: 1.5rem;
  }

  &.d {
    padding: 1.5rem;
    border-top-left-radius: inherit;
    display: grid;
    grid-template-columns: repeat(2, calc(50% - 1rem));
    grid-template-rows: auto;
    grid-auto-rows: 1fr;
    grid-gap: 2rem;
    height: 100%;
  }

  & > .discover {
    width: 100%;
    background-color: $base-end-color;
    border: $border-width-dark-only solid $border-color-dark-only;
    border-radius: v.$border-radius;
    box-shadow: v.$box-shadow;
    position: relative;
    height: 100%;

    & .top {
      @include m.multiply("font-size", 1);
      padding: 1.5rem;
      width: calc(100% - 3rem);
      text-transform: uppercase;
      color: v.$base-font-color-secondary;
      letter-spacing: 0.02rem;
    }

    & .middle {
      width: 100%;
      height: 10rem;
      padding: 1rem 0;

      &.zoom {
        height: 12rem;
        padding: 0;
      }
    }

    & .bottom {
      padding: 1.5rem;
      width: calc(100% - 3rem);
      align-items: flex-end;

      & .left {
        width: max-content;

        & .title {
          font-size: 1.875rem;
          letter-spacing: 0.02rem;
          font-weight: 500;
        }

        & .description {
          @include m.multiply("font-size", 1);
          margin: 0.5rem 0 0 0;
          color: #8498b1;
          font-weight: 500;
          letter-spacing: 0.02rem;
        }
      }

      & .right {
        width: min-content;
        align-self: center;
        margin: 0 0 0 1rem;
        & a.link-to-app {
          width: fit-content;
          & button {
            @include m.multiply("font-size", 1.25);
            width: 100%;
            padding: 0;
            border-radius: calc(1rem * 2);
            font-weight: 600;
            color: v.$base-blue-color-lightened !important;
            background-color: transparent;

            & img {
              margin: 0 0 0 1rem;
            }
          }
        }
      }
    }
  }

  & .collection {
    width: 100%;
    min-height: calc(7rem * #{$compactness});
    height: 0;
    transition: 0.15s height;
    margin: 0 0 calc(2rem * #{$compactness}) 0;
    border-radius: v.$border-radius;
    border: $border-width-dark-only solid $border-color-dark-only;

    &.expanded {
      height: auto;
      box-shadow: v.$box-shadow;

      & .head {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        box-shadow: unset;
        border-bottom: $border-width solid $border-color;

        & .right {
          & .toggle img {
            transform: rotate(180deg);
          }
        }
      }

      & > .scroll {
        top: 0rem;
        display: flex;
      }

      & .body {
        overflow-y: auto;
      }
    }

    & .head {
      transition: 0.15s top;
      z-index: 1;
      box-shadow: v.$box-shadow;
      min-height: calc(4rem * #{$compactness});
      cursor: pointer;

      & .left {
        justify-content: flex-start;
        width: 88%;

        & .title {
          @include m.ellipsis;
          max-width: 100%;
          cursor: pointer;
        }

        & .icon {
          width: calc(3.5rem * #{$compactness});
          height: calc(3.5rem * #{$compactness});
          border-radius: 0.5rem;
          margin-right: 1rem;
          object-fit: contain;
        }
      }

      & .right {
        & .count {
          @include m.multiply("font-size", 1.25);
          margin: 0 1rem 0 0;
          width: auto;
          height: auto;
          text-align: center;
          color: $base-color-lightened-2;
          font-weight: 500;
        }
        & .toggle img {
          transition: 0.25s transform;
          width: 1rem;
          transform: rotate(0deg);
          filter: $base-filter-brightness-5;
        }
      }
    }

    &.scroll {
      height: 100%;
      max-height: 114.5rem;
      padding: 0 0.75rem 0 0;
      width: calc(100% - 0.75rem);
      overflow: hidden;
      &.all {
        padding: 0;
        width: 100%;
        & .body {
          overflow-y: auto;
          padding: 1rem 1.875rem;
        }
      }
    }

    & > .scroll {
      max-height: 52rem;
      flex-wrap: wrap;
      padding: 0;
      border-radius: 1rem;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      background-color: $base-end-color;
      z-index: 0;
      position: relative;
      top: -1rem;
      display: none;
    }
  }

  & #unknown .body .token .wrapper .icon {
    box-shadow: none;
    width: 6rem;
    height: 6rem;
    padding: 1rem;
  }
}

@media (max-width: calc(#{v.$layout-break-4} + 10em)) {
  .nfts {
    &.d {
      grid-template-columns: repeat(1, 100%);
    }
  }
}

@media (max-width: v.$layout-break-5) {
  :host {
    grid-row: unset;
  }

  .nfts {
    flex-direction: row;

    &.d {
      grid-template-columns: repeat(2, calc(50% - 1rem));
    }
  }
}

@media (max-width: v.$layout-break-5) {
  :host {
    grid-row: unset;
  }
  .link-to-app {
    display: none;
  }
}

@media (max-width: calc(#{v.$layout-break-6} - 5em)) {
  .main-container {
    max-width: 100%;
  }
  .top-container-nfts {
    margin-right: 4.35%;
  }
  .top-container-nfts .toggle H1 > span {
    display: none;
  }
  .nfts {
    flex-direction: column;
    flex-wrap: nowrap;
    align-items: initial;

    &.d {
      grid-template-columns: repeat(1, 100%);
    }

    & > .discover {
      width: 100%;
    }
  }
}